#!/bin/bash

#install tools
apt-get -y update
apt-get -y upgrade
apt-get -y install awscli
apt-get -y install zip
apt-get -y install unzip

#set environment variables
INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
MAXWAIT=3
ALLOC_ID=$ELASTIC_IP

export AWS_DEFAULT_REGION=us-east-1

# Script to make sure EIP is free
echo "Checking if EIP with ALLOC_ID[$ALLOC_ID] is free...."
ISFREE=$(aws ec2 describe-addresses --allocation-ids $ALLOC_ID --query Addresses[].InstanceId --output text)
STARTWAIT=$(date +%s)
while [ ! -z "$ISFREE" ]; do
    if [ "$(($(date +%s) - $STARTWAIT))" -gt $MAXWAIT ]; then
        echo "WARNING: We waited 30 seconds, we're forcing it now."
        ISFREE=""
    else
        echo "Waiting for EIP with ALLOC_ID[$ALLOC_ID] to become free...."
        sleep 3
        ISFREE=$(aws ec2 describe-addresses --allocation-ids $ALLOC_ID --query Addresses[].InstanceId --output text)
    fi
done

# Now we can associate the address
echo Running: aws ec2 associate-address --instance-id $INSTANCE_ID --allocation-id $ALLOC_ID --allow-reassociation
aws ec2 associate-address --instance-id $INSTANCE_ID --allocation-id $ALLOC_ID --allow-reassociation


#install docker engine
apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
	
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	
apt-get update
apt-get -y install docker-ce docker-ce-cli containerd.io


#create valheim directories and config file
mkdir -p /etc/valheim /opt/valheim /etc/sysconfig /etc/valheim/backups /etc/valheim/scripts
echo "SERVER_NAME=$SERVER_NAME
SERVER_PORT=2456
WORLD_NAME=$WORLD_NAME
SERVER_PASS=$SERVER_PASS
SERVER_PUBLIC=true" >> /etc/sysconfig/valheim-server

#add steamid to adminlist
echo $ADMIN_ID >> /etc/valheim/adminlist.txt

#create backup to s3 bucket script
echo "zip -r -j /etc/valheim/backups/worlds.zip /etc/valheim/worlds/
aws s3 cp /etc/valheim/backups/worlds.zip s3://$BUCKET_NAME/backups/worlds.zip
echo "Save backed up! Date is: $(date)" >> ~/etc/valheim/backup.log" >> /etc/valheim/scripts/s3backup.sh
chmod +x /etc/valheim/scripts/s3backup.sh


#set time zone to Eastern
timedatectl set-timezone America/New_York


#schedule cronjob to execute s3 bucket script every 4 hours
echo "SHELL=/bin/sh
0 */4 * * * root /etc/valheim/scripts/s3backup.sh" >> /etc/cron.d/s3backupjob
chmod 755 /etc/cron.d/s3backupjob


#download initial valheim save and cleanup
aws s3 cp s3://$BUCKET_NAME/backups/worlds.zip /etc/valheim/
unzip /etc/valheim/worlds.zip -d /etc/valheim/worlds
rm /etc/valheim/worlds.zip


#download valheim service and start server
curl -o /etc/systemd/system/valheim.service https://raw.githubusercontent.com/lloesche/valheim-server-docker/main/valheim.service
systemctl daemon-reload
systemctl enable valheim.service
systemctl start valheim.service
